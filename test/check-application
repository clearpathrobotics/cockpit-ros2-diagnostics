#!/usr/bin/python3 -cimport os, sys; os.execv(os.path.dirname(sys.argv[1]) + "/common/pywrap", sys.argv)

# Run this with --help to see available options for tracing and debugging
# See https://github.com/cockpit-project/cockpit/blob/main/test/common/testlib.py
# "class Browser" and "class MachineCase" for the available API.

import testlib


# Nondestructive tests all run in the same running VM. This allows them to run in Packit, Fedora, and
# RHEL dist-git gating. They must not permanently change any file or configuration on the system in a
# way that influences other tests.
@testlib.nondestructive
class TestApplication(testlib.MachineCase):

    def enter_ros2_diagnostics(self):
        self.login_and_go("/ros2-diagnostics")
        self.browser.wait_text(".pf-v6-c-title", "ROS 2 Diagnostics")

    def checkConnecting(self): # Not yet fully implemented
        b = self.browser

        b.wait_text(".pf-v6-c-card__title-text", "All Diagnostics")
        b.wait_text(".pf-v6-c-empty-state__title-text", "Connecting")

    def testBasic(self):
        b = self.browser
        m = self.machine

        self.enter_ros2_diagnostics()

        # verify expected heading
        b.wait_text(".pf-v6-c-alert__title", "Danger alert:Configuration Error: 'robot.yaml' file not found or empty")



if __name__ == '__main__':
    testlib.test_main()
